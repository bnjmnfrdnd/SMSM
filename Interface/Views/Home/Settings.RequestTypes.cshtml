@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Request Types";
}

@model Interface.Models.RequestType

<div id="requestTypesListView" class="row list-view">
    <div class="col-12">
        <div class="card-box">
            <div class="row">
                <div class="col-6" align="left">
                    <h2 class="custom-h2">Request Types</h2>
                </div>
                <div class="col-6" align="right">
                    <input type="button" onclick="addRequestType()" value="Add" class="btn custom-button" />
                    <input type="button" onclick="getRequestTypes()" value="Reset" class="btn custom-button" />
                </div>
            </div>
            <div class="mt-3">
                <div class="table-responsive table-striped">
                    <table id="requestTypesDataTable" class="table table-bordered dt-responsive nowrap"></table>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="requestTypeDetailView" class="row detail-view">
    <div class="col-12">
        <div class="card-box">
            <div class="row">
                <div class="col-12" align="left">
                    <h3 id="requestTypeHeading" class="header-title">New Request Type</h3>
                </div>
            </div>
            <form method="post" autocomplete="off" asp-action="SaveRequestType" asp-controller="Home">
                <div hidden>
                    <div class="row">
                        <div class="col-lg-12">
                            <fieldset class="form-group">
                                <label class="form-label semibold" asp-for="ID"></label>
                                <input name="__RequestVerificationToken" type="hidden" value="<token_generated_here>"> <!-- Not in use -->
                                <input type="text" id="requestIDInput" class="form-control" asp-for="ID" />
                            </fieldset>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <fieldset class="form-group">
                            <label class="form-label semibold" asp-for="Type"></label>
                            <input type="text" id="requestTypeInput" class="custom-input" asp-for="Type" />
                        </fieldset>
                    </div>
                </div>
                @if (SignInManager.IsSignedIn(User))
                {
                    <div class="row">
                        <div class="col-lg-12">
                            <fieldset class="form-group">
                                <label asp-for="Enabled"></label>
                                <div class="checkbox">
                                    <input type="checkbox" id="requestEnabledInput" asp-for="Enabled" />
                                    <label for="requestEnabledInput"> </label>
                                </div>
                            </fieldset>
                        </div>
                    </div>
                }
                <div class="mt-3" align="right">
                    <input type="button" onclick="showRequestTypesList()" value="Cancel" class="btn custom-button" />
                    <input type="submit" value="Save" class="btn custom-button" />
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        showRequestTypesList();
        getRequests();
    });
    var query = "";
    var tmdb_api_key = "3adb91774a2fe2901621d419e9250c19";
    var imdb_api_key = "k_s93IvoS6";

    function addRequestType() {
        clearRequestTypeDetailForm();
        showRequestTypeDetail();
    }

    function getRequestTypes() {
        $.ajax({
            method: "get",
            contentType: "application/json; charset=utf-8",
            url: "GetRequests",
            dataType: "json",
            success: function (response) {
                console.log(response);
                var requestTypesDataTable = $("#requestTypesDataTable").dataTable({
                    responsive: true,
                    searching: true,
                    ordering: true,
                    autoWidth: false,
                    deferRender: true,
                    select: true,
                    paging: true,
                    pageLength: 25,
                    data: response,
                    destroy: true,
                    columns: [
                        {
                            title: 'ID',
                            data: 'id',
                            responsivePriority: 0,
                            visible: false
                        },
                        {
                            title: "Title",
                            data: "title",
                            responsivePriority: 0
                        },
                        {
                            title: "Year",
                            data: "year",
                            responsivePriority: 0
                        },
                        {
                            data: 'id',
                            render: function (data, type, row) {
                                var edit = '<button title="Edit" class="btn btn-icon" onclick="editRequestType(\'' + data + '\')"><i class="glyphicon glyphicon-pencil"></i></button>';
                                var del = '<button title="Delete" class="btn" onclick="deleteRequestType(\'' + data + '\')"><span class="glyphicon glyphicon-remove"></span></button>';
                                return edit + del;
                            },
                            responsivePriority: 0,
                            orderable: false,
                            width: 10
                        }
                    ],
                    initComplete: function (settings, json) { }
                });

                requestTypesDataTable.on("page.dt", function () {
                    $("html, body").animate({
                        scrollTop: 0
                    },
                        "slow"
                    );
                });
            }
        });
    }

    function clearRequestTypeDetailForm() {
        $("#requestTypeHeading").html('New Request');
        $("#requestIDInput").val('');
        $("#requestTypeInput").val('');
        $("#requestEnabledInput").prop('checked', false);
    }

    function showRequestTypeDetail() {
        $("#requestListView").hide();
        $("#requestDetailView").show();
    }

    function showRequestTypesList() {
        $("#requestTypesListView").show();
        $("#requestTypeDetailView").hide();
    }

    function editRequestType(requestId) {
        clearRequestTypeDetailForm();
        $.ajax({
            method: 'get',
            url: "GetRequest?requestId=" + requestId,
            dataType: 'json',
            success: function (response) {
                clearRequestTypeDetailForm();
                showRequestTypeDetail();
                document.getElementById("requestTypeHeading").innerHTML = response.title;
                $("#requestIDInput").val(response.id);
                $("#requestTypeInput").val(response.type);
                $("#requestEnabledInput").prop('checked', response.enabled);

            },
            error: function (xhr, err) {
                alert(xhr.responseText);
                console.log(xhr.responseText);
            }
        });
    }

    function deleteRequestType(requestId) {
        $.ajax({
            method: 'post',
            url: "DeleteRequest?id=" + requestId,
            dataType: 'json',
            success: function (response) {
                alert(response);
                getRequests();

            },
            error: function (xhr, err) {
                alert(xhr.responseText);
                console.log(xhr.responseText);
            }
        });
    }

</script>
